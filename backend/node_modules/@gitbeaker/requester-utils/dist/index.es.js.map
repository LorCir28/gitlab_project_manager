{"version":3,"file":"index.es.js","sources":["../src/RequesterUtils.ts","../src/BaseResource.ts"],"sourcesContent":["import { decamelizeKeys } from 'xcase';\nimport FormData from 'form-data';\nimport { stringify } from 'qs';\n\n// Types\nexport interface Constructable<T = any> {\n  new (...args: any[]): T;\n}\n\nexport interface RequesterType {\n  get(endpoint: string, options?: Record<string, unknown>): Promise<any>;\n  post(endpoint: string, options?: Record<string, unknown>): Promise<any>;\n  put(endpoint: string, options?: Record<string, unknown>): Promise<any>;\n  delete(endpoint: string, options?: Record<string, unknown>): Promise<any>;\n  stream?(endpoint: string, options?: Record<string, unknown>): NodeJS.ReadableStream;\n}\n\nexport type DefaultResourceOptions = {\n  headers: { [header: string]: string };\n  requestTimeout: number;\n  url: string;\n  rejectUnauthorized: boolean;\n};\n\nexport type DefaultRequestOptions = {\n  body?: FormData | Record<string, unknown>;\n  query?: Record<string, unknown>;\n  sudo?: string;\n  method?: string;\n};\n\nexport type DefaultRequestReturn = {\n  headers: Record<string, string> | Headers;\n  timeout?: number;\n  method: string;\n  searchParams?: string;\n  prefixUrl?: string;\n  body?: string | FormData;\n};\n\n// Utility methods\nexport function formatQuery(params: Record<string, unknown> = {}): string {\n  const decamelized = decamelizeKeys(params);\n\n  return stringify(decamelized, { arrayFormat: 'brackets' });\n}\n\nexport type OptionsHandlerFn = (\n  serviceOptions: DefaultResourceOptions,\n  requestOptions: DefaultRequestOptions,\n) => DefaultRequestReturn;\nexport function defaultOptionsHandler(\n  resourceOptions: DefaultResourceOptions,\n  { body, query, sudo, method = 'get' }: DefaultRequestOptions = {},\n): DefaultRequestReturn {\n  const { headers: preconfiguredHeaders, requestTimeout, url } = resourceOptions;\n  const headers = { ...preconfiguredHeaders };\n  let bod: FormData | string;\n\n  if (sudo) headers.sudo = sudo;\n\n  // FIXME: Not the best comparison, but...it will have to do for now.\n  if (typeof body === 'object' && body.constructor.name !== 'FormData') {\n    bod = JSON.stringify(decamelizeKeys(body));\n    headers['content-type'] = 'application/json';\n  } else {\n    bod = body as FormData;\n  }\n\n  return {\n    headers,\n    timeout: requestTimeout,\n    method,\n    searchParams: formatQuery(query),\n    prefixUrl: url,\n    body: bod,\n  };\n}\n\nexport type RequestHandlerFn = (\n  endpoint: string,\n  options?: Record<string, unknown>,\n) =>\n  | any\n  | Promise<{\n      body: Record<string, unknown> | Record<string, unknown>[];\n      headers: Record<string, unknown> | Headers;\n      status: number;\n    }>;\n\nexport function createRequesterFn(\n  optionsHandler: OptionsHandlerFn,\n  requestHandler: RequestHandlerFn,\n): (serviceOptions: DefaultResourceOptions) => RequesterType {\n  const methods = ['get', 'post', 'put', 'delete', 'stream'];\n\n  return (serviceOptions) => {\n    const requester: RequesterType = {} as RequesterType;\n\n    methods.forEach((m) => {\n      requester[m] = (endpoint: string, options: Record<string, unknown>) => {\n        const requestOptions = optionsHandler(serviceOptions, { ...options, method: m });\n\n        return requestHandler(endpoint, requestOptions);\n      };\n    });\n\n    return requester;\n  };\n}\n\nfunction extendClass<T extends Constructable>(Base: T, customConfig: Record<string, unknown>): T {\n  return class extends Base {\n    constructor(...options: any[]) {\n      const [config, ...opts] = options;\n\n      super({ ...customConfig, ...config }, ...opts);\n    }\n  };\n}\n\nexport function presetResourceArguments<T>(\n  resources: T,\n  customConfig: Record<string, unknown> = {},\n) {\n  const updated = {};\n\n  Object.entries(resources)\n    .filter(([, s]) => typeof s === 'function') // FIXME: Odd default artifact included in this list during testing\n    .forEach(([k, r]) => {\n      updated[k] = extendClass(r, customConfig);\n    });\n\n  return updated as T;\n}\n","import { RequesterType, DefaultResourceOptions } from './RequesterUtils';\n\nexport interface BaseResourceOptions<C> {\n  oauthToken?: string;\n  token?: string;\n  jobToken?: string;\n  host?: string;\n  prefixUrl?: string;\n  version?: 3 | 4;\n  rejectUnauthorized?: boolean;\n  camelize?: C;\n  requesterFn?: (resourceOptions: DefaultResourceOptions) => RequesterType;\n  requestTimeout?: number;\n  profileToken?: string;\n  sudo?: string | number;\n  profileMode?: 'execution' | 'memory';\n}\n\nexport class BaseResource<C extends boolean = false> {\n  public readonly url: string;\n\n  public readonly requester: RequesterType;\n\n  public readonly requestTimeout: number;\n\n  public readonly headers: { [header: string]: string };\n\n  public readonly camelize: C | undefined;\n\n  public readonly rejectUnauthorized: boolean;\n\n  constructor({\n    token,\n    jobToken,\n    oauthToken,\n    sudo,\n    profileToken,\n    requesterFn,\n    camelize,\n    profileMode = 'execution',\n    host = 'https://gitlab.com',\n    prefixUrl = '',\n    version = 4,\n    rejectUnauthorized = true,\n    requestTimeout = 300000,\n  }: BaseResourceOptions<C> = {}) {\n    if (!requesterFn) throw new ReferenceError('requesterFn must be passed');\n\n    this.url = [host, 'api', `v${version}`, prefixUrl].join('/');\n\n    this.headers = {\n      'user-agent': 'gitbeaker',\n    };\n    this.rejectUnauthorized = rejectUnauthorized;\n    this.camelize = camelize;\n    this.requestTimeout = requestTimeout;\n\n    // Handle auth tokens\n    if (oauthToken) this.headers.authorization = `Bearer ${oauthToken}`;\n    else if (jobToken) this.headers['job-token'] = jobToken;\n    else if (token) this.headers['private-token'] = token;\n\n    // Profiling\n    if (profileToken) {\n      this.headers['X-Profile-Token'] = profileToken;\n      this.headers['X-Profile-Mode'] = profileMode;\n    }\n\n    // Set sudo\n    if (sudo) this.headers.Sudo = `${sudo}`;\n\n    // Set requester instance using this information\n    this.requester = requesterFn({ ...this });\n  }\n}\n"],"names":[],"mappings":"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"}